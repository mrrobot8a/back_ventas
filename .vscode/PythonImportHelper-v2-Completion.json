[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairView",
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "isExtraImport": true,
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "DocumentType",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "SaleDetail",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Sale",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "SaleDetail",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Supplier",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "DocumentType",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Supplier",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "Sale",
        "importPath": "backend_ventas_api.models",
        "description": "backend_ventas_api.models",
        "isExtraImport": true,
        "detail": "backend_ventas_api.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "backend_ventas_api.serializers.user_serializer",
        "description": "backend_ventas_api.serializers.user_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.user_serializer",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "backend_ventas_api.serializers.user_serializer",
        "description": "backend_ventas_api.serializers.user_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.user_serializer",
        "documentation": {}
    },
    {
        "label": "DocumentTypeSerializer",
        "importPath": "backend_ventas_api.serializers.document_type_serializer",
        "description": "backend_ventas_api.serializers.document_type_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.document_type_serializer",
        "documentation": {}
    },
    {
        "label": "DocumentTypeSerializer",
        "importPath": "backend_ventas_api.serializers.document_type_serializer",
        "description": "backend_ventas_api.serializers.document_type_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.document_type_serializer",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "SupplierSerializer",
        "importPath": "backend_ventas_api.serializers.supplier_serializer",
        "description": "backend_ventas_api.serializers.supplier_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.supplier_serializer",
        "documentation": {}
    },
    {
        "label": "SupplierSerializer",
        "importPath": "backend_ventas_api.serializers.supplier_serializer",
        "description": "backend_ventas_api.serializers.supplier_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.supplier_serializer",
        "documentation": {}
    },
    {
        "label": "SaleDetailSerializer",
        "importPath": "backend_ventas_api.serializers.sale_detail_serializer",
        "description": "backend_ventas_api.serializers.sale_detail_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.sale_detail_serializer",
        "documentation": {}
    },
    {
        "label": "RoleSerializer",
        "importPath": "backend_ventas_api.serializers.role_serializer",
        "description": "backend_ventas_api.serializers.role_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.role_serializer",
        "documentation": {}
    },
    {
        "label": "RoleSerializer",
        "importPath": "backend_ventas_api.serializers.role_serializer",
        "description": "backend_ventas_api.serializers.role_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.role_serializer",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "importPath": "backend_ventas_api.serializers.customer_serializer",
        "description": "backend_ventas_api.serializers.customer_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.customer_serializer",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "backend_ventas_api.serializers.product_serializer",
        "description": "backend_ventas_api.serializers.product_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.product_serializer",
        "documentation": {}
    },
    {
        "label": "SaleSerializer",
        "importPath": "backend_ventas_api.serializers.sale_serializer",
        "description": "backend_ventas_api.serializers.sale_serializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.sale_serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "importPath": "backend_ventas_api.serializers.MyTokenObtainPairSerializer",
        "description": "backend_ventas_api.serializers.MyTokenObtainPairSerializer",
        "isExtraImport": true,
        "detail": "backend_ventas_api.serializers.MyTokenObtainPairSerializer",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend_ventas.asgi",
        "description": "backend_ventas.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend_ventas.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-8^i7ilg=(mn6vtsive&+&&hg((rfcp_k-$glru#3(k)fftuiop'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-8^i7ilg=(mn6vtsive&+&&hg((rfcp_k-$glru#3(k)fftuiop'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'backend_ventas_api',\n    'rest_framework.authtoken',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\n# Configurar USER_ID_FIELD para que use id_usuario\nSIMPLE_JWT = {\n    'USER_ID_FIELD': 'id_usuario',\n    'USER_ID_CLAIM': 'user_id',\n}",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'USER_ID_FIELD': 'id_usuario',\n    'USER_ID_CLAIM': 'user_id',\n}\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n]",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_WHITELIST",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "CORS_ORIGIN_WHITELIST = [\n    'http://localhost:4200',\n    'http://otro-dominio.com',\n    # otros dominios permitidos\n]\nROOT_URLCONF = 'backend_ventas.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "ROOT_URLCONF = 'backend_ventas.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "WSGI_APPLICATION = 'backend_ventas.wsgi.application'\nAUTH_USER_MODEL = 'backend_ventas_api.User'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'db_ventas',\n        'USER': 'dev_j',\n        'PASSWORD': '4321',",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'backend_ventas_api.User'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'db_ventas',\n        'USER': 'dev_j',\n        'PASSWORD': '4321',\n        'HOST': 'localhost',  # Use 'localhost' if the database is on the same machine",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'db_ventas',\n        'USER': 'dev_j',\n        'PASSWORD': '4321',\n        'HOST': 'localhost',  # Use 'localhost' if the database is on the same machine\n        'PORT': '3306',  # Typically 3306 for MySQL\n    }\n}",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    # {\n    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    # },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator','OPTIONS': {\n            'min_length': 4,\n        }\n    },\n    # {",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend_ventas.settings",
        "description": "backend_ventas.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_ventas.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_ventas.urls",
        "description": "backend_ventas.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    # This line in the URL configuration is including the URLs from another URL configuration file\n    # named `backend_ventas_api.urls` under the path `api_ventas/v1/`. This allows you to organize\n    # your URL patterns into separate files and include them in the main URL configuration. It helps\n    # in keeping the code modular and maintainable.\n    path('api_ventas/v1/', include('backend_ventas_api.urls')),\n]\nurlpatterns = [\n     path('admin/', admin.site.urls),",
        "detail": "backend_ventas.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_ventas.urls",
        "description": "backend_ventas.urls",
        "peekOfCode": "urlpatterns = [\n     path('admin/', admin.site.urls),\n    # This line in the URL configuration is including the URLs from another URL configuration file\n    # named `backend_ventas_api.urls` under the path `api_ventas/v1/`. This allows you to organize\n    # your URL patterns into separate files and include them in the main URL configuration. It helps\n    # in keeping the code modular and maintainable.\n    path('api_ventas/v1/', include('backend_ventas_api.urls')),\n    path('api/token/', MyTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n]",
        "detail": "backend_ventas.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend_ventas.wsgi",
        "description": "backend_ventas.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend_ventas.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_ventas_api.migrations.0001_initial",
        "description": "backend_ventas_api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('password', models.CharField(max_length=128, verbose_name='password')),\n                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),",
        "detail": "backend_ventas_api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_ventas_api.migrations.0002_remove_customer_user_id",
        "description": "backend_ventas_api.migrations.0002_remove_customer_user_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend_ventas_api', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='customer',\n            name='user_id',\n        ),\n    ]",
        "detail": "backend_ventas_api.migrations.0002_remove_customer_user_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_ventas_api.migrations.0003_alter_supplier_nit",
        "description": "backend_ventas_api.migrations.0003_alter_supplier_nit",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend_ventas_api', '0002_remove_customer_user_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='supplier',\n            name='nit',\n            field=models.CharField(max_length=20, unique=True),\n        ),",
        "detail": "backend_ventas_api.migrations.0003_alter_supplier_nit",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_ventas_api.migrations.0004_alter_product_id_supplier",
        "description": "backend_ventas_api.migrations.0004_alter_product_id_supplier",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend_ventas_api', '0003_alter_supplier_nit'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='id_supplier',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='backend_ventas_api.supplier', unique=True),\n        ),",
        "detail": "backend_ventas_api.migrations.0004_alter_product_id_supplier",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_ventas_api.migrations.0005_alter_product_id_supplier",
        "description": "backend_ventas_api.migrations.0005_alter_product_id_supplier",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend_ventas_api', '0004_alter_product_id_supplier'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='id_supplier',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend_ventas_api.supplier'),\n        ),",
        "detail": "backend_ventas_api.migrations.0005_alter_product_id_supplier",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_ventas_api.migrations.0006_alter_product_id_supplier",
        "description": "backend_ventas_api.migrations.0006_alter_product_id_supplier",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend_ventas_api', '0005_alter_product_id_supplier'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='id_supplier',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='backend_ventas_api.supplier'),\n        ),",
        "detail": "backend_ventas_api.migrations.0006_alter_product_id_supplier",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "backend_ventas_api.models.customer_model",
        "description": "backend_ventas_api.models.customer_model",
        "peekOfCode": "class Customer(models.Model):\n    id = models.AutoField(primary_key=True)\n    document = models.CharField(max_length=20)\n    document_type = models.ForeignKey(DocumentType, on_delete=models.CASCADE)  # Relación con DocumentType\n    first_name = models.CharField(max_length=50)\n    last_name = models.CharField(max_length=50)\n    address = models.CharField(max_length=100)\n    phone = models.CharField(max_length=20, blank=True, null=True)\n    date_of_birth = models.DateField(blank=True, null=True)\n    profile_image_url = models.CharField(max_length=255, blank=True, null=True)",
        "detail": "backend_ventas_api.models.customer_model",
        "documentation": {}
    },
    {
        "label": "DocumentType",
        "kind": 6,
        "importPath": "backend_ventas_api.models.document_type_model",
        "description": "backend_ventas_api.models.document_type_model",
        "peekOfCode": "class DocumentType(models.Model):\n    id = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name\n    class Meta:\n        db_table = 'document_type'",
        "detail": "backend_ventas_api.models.document_type_model",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "backend_ventas_api.models.product_model",
        "description": "backend_ventas_api.models.product_model",
        "peekOfCode": "class Product(models.Model):\n    id_product = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=50)\n    category = models.CharField(max_length=50)\n    brand = models.CharField(max_length=50)\n    unit_price = models.DecimalField(max_digits=10, decimal_places=2)\n    stock_units = models.IntegerField()\n    description = models.TextField(blank=True, null=True)\n    id_supplier = models.ForeignKey(Supplier, on_delete=models.SET_NULL, null=True, blank=True, related_name='products')\n    def __str__(self):",
        "detail": "backend_ventas_api.models.product_model",
        "documentation": {}
    },
    {
        "label": "Role",
        "kind": 6,
        "importPath": "backend_ventas_api.models.role_model",
        "description": "backend_ventas_api.models.role_model",
        "peekOfCode": "class Role(models.Model):\n    id_rol = models.AutoField(primary_key=True)\n    name_rol = models.CharField(max_length=50, unique=True)\n    description  = models.TextField(blank=True, null=True)\n    creation_date = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.name_rol\n    class Meta:\n        db_table = 'role'",
        "detail": "backend_ventas_api.models.role_model",
        "documentation": {}
    },
    {
        "label": "SaleDetail",
        "kind": 6,
        "importPath": "backend_ventas_api.models.sale_detail_model",
        "description": "backend_ventas_api.models.sale_detail_model",
        "peekOfCode": "class SaleDetail(models.Model):\n    id_sale_detail = models.AutoField(primary_key=True)\n    id_sale = models.ForeignKey(Sale, on_delete=models.CASCADE, related_name='sale_details')\n    id_product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='sale_details')\n    quantity = models.IntegerField()\n    class Meta:\n        db_table = 'sale_details'\n    def __str__(self):\n        return f\"{self.id_product} ({self.quantity})\"",
        "detail": "backend_ventas_api.models.sale_detail_model",
        "documentation": {}
    },
    {
        "label": "Sale",
        "kind": 6,
        "importPath": "backend_ventas_api.models.sale_model",
        "description": "backend_ventas_api.models.sale_model",
        "peekOfCode": "class Sale(models.Model):\n    id_sale = models.AutoField(primary_key=True)\n    id_customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True, blank=True, related_name='sales')\n    total = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)\n    sale_date = models.DateField()\n    def __str__(self):\n        return f\"Sale {self.id_sale} by {self.id_customer}\"\n    class Meta:\n        db_table = 'sales'",
        "detail": "backend_ventas_api.models.sale_model",
        "documentation": {}
    },
    {
        "label": "Supplier",
        "kind": 6,
        "importPath": "backend_ventas_api.models.supplier_model",
        "description": "backend_ventas_api.models.supplier_model",
        "peekOfCode": "class Supplier(models.Model):\n    id_supplier = models.AutoField(primary_key=True)\n    id_user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True, blank=True, related_name='suppliers')\n    nit = models.CharField(max_length=20,unique=True)\n    name = models.CharField(max_length=50)\n    city = models.CharField(max_length=50)\n    email = models.EmailField(max_length=50)\n    contact_number = models.CharField(max_length=20, blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "backend_ventas_api.models.supplier_model",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "kind": 6,
        "importPath": "backend_ventas_api.models.UserRole_model",
        "description": "backend_ventas_api.models.UserRole_model",
        "peekOfCode": "class UserRole(models.Model):\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE, related_name='user_roles')\n    role = models.ForeignKey(get_role_model(), on_delete=models.CASCADE, related_name='role_users')\n    class Meta:\n        constraints = [\n            models.UniqueConstraint(fields=['user', 'role'], name='unique_user_role')\n        ]\n        db_table = 'user_role'\n    def __str__(self):\n        return f\"{self.user} - {self.role}\"",
        "detail": "backend_ventas_api.models.UserRole_model",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "kind": 2,
        "importPath": "backend_ventas_api.models.UserRole_model",
        "description": "backend_ventas_api.models.UserRole_model",
        "peekOfCode": "def get_user_model():\n    from .user_model import User\n    return User\ndef get_role_model():\n    from .role_model import Role\n    return Role\nclass UserRole(models.Model):\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE, related_name='user_roles')\n    role = models.ForeignKey(get_role_model(), on_delete=models.CASCADE, related_name='role_users')\n    class Meta:",
        "detail": "backend_ventas_api.models.UserRole_model",
        "documentation": {}
    },
    {
        "label": "get_role_model",
        "kind": 2,
        "importPath": "backend_ventas_api.models.UserRole_model",
        "description": "backend_ventas_api.models.UserRole_model",
        "peekOfCode": "def get_role_model():\n    from .role_model import Role\n    return Role\nclass UserRole(models.Model):\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE, related_name='user_roles')\n    role = models.ForeignKey(get_role_model(), on_delete=models.CASCADE, related_name='role_users')\n    class Meta:\n        constraints = [\n            models.UniqueConstraint(fields=['user', 'role'], name='unique_user_role')\n        ]",
        "detail": "backend_ventas_api.models.UserRole_model",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "backend_ventas_api.models.user_model",
        "description": "backend_ventas_api.models.user_model",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, name_user, email, password=None, **extra_fields):\n        if not name_user:\n            raise ValueError(\"El nombre de usuario debe ser proporcionado\")\n        if not email:\n            raise ValueError(\"El email debe ser proporcionado\")\n        email = self.normalize_email(email)\n        user = self.model(name_user=name_user, email=email, **extra_fields)\n        user.set_password(password)  # Cifra la contraseña\n        user.save(using=self._db)",
        "detail": "backend_ventas_api.models.user_model",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend_ventas_api.models.user_model",
        "description": "backend_ventas_api.models.user_model",
        "peekOfCode": "class User(AbstractBaseUser):\n    id_usuario = models.AutoField(primary_key=True)\n    name_user = models.CharField(max_length=50, unique=True)\n    email = models.EmailField(max_length=50, unique=True)\n    creation_date = models.DateTimeField(auto_now_add=True)\n    is_staff = models.BooleanField(default=False)\n    is_superuser = models.BooleanField(default=False)\n    is_active = models.BooleanField(default=True)\n    objects = UserManager()\n    USERNAME_FIELD = 'email'",
        "detail": "backend_ventas_api.models.user_model",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.customer_serializer",
        "description": "backend_ventas_api.serializers.customer_serializer",
        "peekOfCode": "class CustomerSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Customer\n        fields = '__all__'",
        "detail": "backend_ventas_api.serializers.customer_serializer",
        "documentation": {}
    },
    {
        "label": "DocumentTypeSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.document_type_serializer",
        "description": "backend_ventas_api.serializers.document_type_serializer",
        "peekOfCode": "class DocumentTypeSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = DocumentType\n        fields = '__all__'",
        "detail": "backend_ventas_api.serializers.document_type_serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.MyTokenObtainPairSerializer",
        "description": "backend_ventas_api.serializers.MyTokenObtainPairSerializer",
        "peekOfCode": "class MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)\n        # Agrega campos personalizados al token\n        token['name_user'] = user.name_user\n        token['email'] = user.email\n        return token\n    def validate(self, attrs):\n        data = super().validate(attrs)",
        "detail": "backend_ventas_api.serializers.MyTokenObtainPairSerializer",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.product_serializer",
        "description": "backend_ventas_api.serializers.product_serializer",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    # Campos calculados para obtener el nombre y NIT del proveedor\n    supplier_name = serializers.SerializerMethodField()\n    supplier_nit = serializers.SerializerMethodField()\n    class Meta:\n        model = Product\n        fields = '__all__'  # Incluye todos los campos del modelo Product en la respuesta\n    def get_supplier_name(self, obj):\n        # Obtiene el nombre del proveedor asociado a través del campo id_supplier\n        if obj.id_supplier:",
        "detail": "backend_ventas_api.serializers.product_serializer",
        "documentation": {}
    },
    {
        "label": "RoleSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.role_serializer",
        "description": "backend_ventas_api.serializers.role_serializer",
        "peekOfCode": "class RoleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Role\n        fields = '__all__'",
        "detail": "backend_ventas_api.serializers.role_serializer",
        "documentation": {}
    },
    {
        "label": "SaleDetailSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.sale_detail_serializer",
        "description": "backend_ventas_api.serializers.sale_detail_serializer",
        "peekOfCode": "class SaleDetailSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SaleDetail\n        fields = '__all__'\n        extra_kwargs = {\n            'id_sale': {'required': False}  \n        }\n    def validate(self, data):\n        product = data['id_product']\n        if product.stock_units < data['quantity']:",
        "detail": "backend_ventas_api.serializers.sale_detail_serializer",
        "documentation": {}
    },
    {
        "label": "SaleSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.sale_serializer",
        "description": "backend_ventas_api.serializers.sale_serializer",
        "peekOfCode": "class SaleSerializer(serializers.ModelSerializer):\n    sale_details = SaleDetailSerializer(many=True)\n    class Meta:\n        model = Sale\n        fields = '__all__'\n    def validate(self, data):\n        \"\"\"\n        Validar los detalles de la venta para asegurar que el stock es suficiente.\n        \"\"\"\n        sale_details_data = data.get('sale_details', [])",
        "detail": "backend_ventas_api.serializers.sale_serializer",
        "documentation": {}
    },
    {
        "label": "SupplierSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.supplier_serializer",
        "description": "backend_ventas_api.serializers.supplier_serializer",
        "peekOfCode": "class SupplierSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Supplier\n        fields = ['id_supplier','name', 'nit', 'city', 'email',\n                    'contact_number',\n                    'created_at', 'updated_at']",
        "detail": "backend_ventas_api.serializers.supplier_serializer",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend_ventas_api.serializers.user_serializer",
        "description": "backend_ventas_api.serializers.user_serializer",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    roles = serializers.SerializerMethodField()\n    class Meta:\n        model = User\n        fields = '__all__'\n    def get_roles(self, obj):\n        # Obtiene los roles asociados al usuario a través de UserRole\n        roles = obj.user_roles.all().values_list('role', flat=True)\n        return RoleSerializer(Role.objects.filter(id_rol__in=roles), many=True).data",
        "detail": "backend_ventas_api.serializers.user_serializer",
        "documentation": {}
    },
    {
        "label": "CustomUserCreationForm",
        "kind": 6,
        "importPath": "backend_ventas_api.admin",
        "description": "backend_ventas_api.admin",
        "peekOfCode": "class CustomUserCreationForm(UserCreationForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email')\nclass CustomUserChangeForm(UserChangeForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email', 'password', 'is_active', 'is_staff', 'is_superuser')\nclass UserAdmin(BaseUserAdmin):\n    # Forms to add and change user instances",
        "detail": "backend_ventas_api.admin",
        "documentation": {}
    },
    {
        "label": "CustomUserChangeForm",
        "kind": 6,
        "importPath": "backend_ventas_api.admin",
        "description": "backend_ventas_api.admin",
        "peekOfCode": "class CustomUserChangeForm(UserChangeForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email', 'password', 'is_active', 'is_staff', 'is_superuser')\nclass UserAdmin(BaseUserAdmin):\n    # Forms to add and change user instances\n    add_form = CustomUserCreationForm\n    form = CustomUserChangeForm\n    # The fields to be used in displaying the User model.\n    list_display = ('name_user', 'email', 'is_staff', 'is_active')",
        "detail": "backend_ventas_api.admin",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "backend_ventas_api.admin",
        "description": "backend_ventas_api.admin",
        "peekOfCode": "class UserAdmin(BaseUserAdmin):\n    # Forms to add and change user instances\n    add_form = CustomUserCreationForm\n    form = CustomUserChangeForm\n    # The fields to be used in displaying the User model.\n    list_display = ('name_user', 'email', 'is_staff', 'is_active')\n    list_filter = ('is_staff', 'is_superuser', 'is_active')\n    fieldsets = (\n        (None, {'fields': ('name_user', 'email', 'password')}),\n        ('Permissions', {'fields': ('is_staff', 'is_superuser', 'is_active')}),",
        "detail": "backend_ventas_api.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "backend_ventas_api.admin",
        "description": "backend_ventas_api.admin",
        "peekOfCode": "admin.site.site_title = 'Ventas App'\nadmin.site.site_header = 'Ventas App'\nclass CustomUserCreationForm(UserCreationForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email')\nclass CustomUserChangeForm(UserChangeForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email', 'password', 'is_active', 'is_staff', 'is_superuser')",
        "detail": "backend_ventas_api.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "backend_ventas_api.admin",
        "description": "backend_ventas_api.admin",
        "peekOfCode": "admin.site.site_header = 'Ventas App'\nclass CustomUserCreationForm(UserCreationForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email')\nclass CustomUserChangeForm(UserChangeForm):\n    class Meta:\n        model = User\n        fields = ('name_user', 'email', 'password', 'is_active', 'is_staff', 'is_superuser')\nclass UserAdmin(BaseUserAdmin):",
        "detail": "backend_ventas_api.admin",
        "documentation": {}
    },
    {
        "label": "BackendVentasConfig",
        "kind": 6,
        "importPath": "backend_ventas_api.apps",
        "description": "backend_ventas_api.apps",
        "peekOfCode": "class BackendVentasConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'backend_ventas_api'",
        "detail": "backend_ventas_api.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend_ventas_api.urls",
        "description": "backend_ventas_api.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'customers', CustomerViewSet)\nrouter.register(r'document-types', DocumentTypeViewSet)\nrouter.register(r'users', UserViewSet)\nrouter.register(r'roles', RoleViewSet)\nrouter.register(r'suppliers', SupplierViewSet)\nrouter.register(r'products', ProductViewSet)\nrouter.register(r'sales', SaleViewSet)\nurlpatterns = [\n    path('', include(router.urls)),",
        "detail": "backend_ventas_api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_ventas_api.urls",
        "description": "backend_ventas_api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend_ventas_api.urls",
        "documentation": {}
    },
    {
        "label": "CustomerViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class CustomerViewSet(viewsets.ModelViewSet):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\n    # permission_classes = [IsAuthenticated]\nclass DocumentTypeViewSet(viewsets.ModelViewSet):\n    queryset = DocumentType.objects.all()\n    serializer_class = DocumentTypeSerializer\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "DocumentTypeViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class DocumentTypeViewSet(viewsets.ModelViewSet):\n    queryset = DocumentType.objects.all()\n    serializer_class = DocumentTypeSerializer\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\nclass RoleViewSet(viewsets.ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleSerializer\nclass SaleViewSet(viewsets.ModelViewSet):",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\nclass RoleViewSet(viewsets.ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleSerializer\nclass SaleViewSet(viewsets.ModelViewSet):\n    queryset = Sale.objects.all()\n    serializer_class = SaleSerializer\nclass SupplierViewSet(viewsets.ModelViewSet):",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "RoleViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class RoleViewSet(viewsets.ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleSerializer\nclass SaleViewSet(viewsets.ModelViewSet):\n    queryset = Sale.objects.all()\n    serializer_class = SaleSerializer\nclass SupplierViewSet(viewsets.ModelViewSet):\n    queryset = Supplier.objects.all()\n    serializer_class = SupplierSerializer    \nclass ProductViewSet(viewsets.ModelViewSet):",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "SaleViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class SaleViewSet(viewsets.ModelViewSet):\n    queryset = Sale.objects.all()\n    serializer_class = SaleSerializer\nclass SupplierViewSet(viewsets.ModelViewSet):\n    queryset = Supplier.objects.all()\n    serializer_class = SupplierSerializer    \nclass ProductViewSet(viewsets.ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\nclass MyTokenObtainPairView(TokenObtainPairView):",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "SupplierViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class SupplierViewSet(viewsets.ModelViewSet):\n    queryset = Supplier.objects.all()\n    serializer_class = SupplierSerializer    \nclass ProductViewSet(viewsets.ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\nclass MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class ProductViewSet(viewsets.ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\nclass MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairView",
        "kind": 6,
        "importPath": "backend_ventas_api.views",
        "description": "backend_ventas_api.views",
        "peekOfCode": "class MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer",
        "detail": "backend_ventas_api.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend_ventas.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]